:root {
	--card-gap: 25vh;
	--card-top-offset: 1.5em;
	--sticky-position: 0%;
	--outline-width: 0px;
	--card-height: 400px;
	--container-width: clamp(300px, 90vw, 1200px);
}

#cards {
	/* Make place at bottom, as items will slide to that position*/
	/* padding-bottom: calc(var(--numcards) * var(--card-top-offset)); */
	/* Don't include the --card-gap in padding, as that will affect the scroll-timeline*/
	/* margin-bottom: var(--card-gap); */
	margin-bottom: 15vh;
}

#card_1 {
	--index: 1;
}

#card_2 {
	--index: 2;
}

#card_3 {
	--index: 3;
}

#card_4 {
	--index: 4;
}

.card {
	position: sticky;
	top: var(--sticky-position);
	padding-top: calc(var(--index) * var(--card-top-offset));
}

.card__content {
	transform-origin: 50% 0%;
	will-change: transform;
	min-height: var(--card-height);
}

/** PAGE STYLING **/

* {
	box-sizing: border-box;
	margin: 0;
	padding: 0;
}

html {
	background: #000;
	color: rgb(255, 255, 255);
	font-size: 10px;
}

body {
	font-size: calc(1em + 0.5vw);
	font-family: "JetBrains Mono", monospace;
	font-optical-sizing: auto;
	font-weight: 100;
	font-style: normal;
	display: grid;
	gap: 1em;
}

body::before {
	--size: 45px;
	--line: rgb(255 255 255 / 40%);
	content: "";
	height: 100vh;
	width: 100vw;
	position: fixed;
	background: linear-gradient(90deg, var(--line) 1px, transparent 1px var(--size)) calc(var(--size) * 0.36) 50% / var(--size) var(--size),
		linear-gradient(var(--line) 1px, transparent 1px var(--size)) 0% calc(var(--size) * 0.32) / var(--size) var(--size);
	mask: linear-gradient(-20deg, transparent 20%, white);
	top: 0;
	transform-style: flat;
	pointer-events: none;
	z-index: -1;
}

h1,
h2,
h3 {
	font-weight: 900;
	text-transform: uppercase;
	text-wrap: balance;
	line-height: 1;
}

header,
main {
	width: 100%;
	max-width: var(--container-width);
	margin: 0 auto;
	text-align: center;
}

header {
	height: 100vh;
	display: grid;
	place-items: center;
}

#cards {
	list-style: none;
	outline: calc(var(--outline-width) * 10) solid hotpink;
	display: grid;
	grid-template-columns: 1fr;
	grid-template-rows: repeat(var(--numcards), var(--card-height));
	gap: var(--card-gap);
}

.card {
	outline: var(--outline-width) solid lime;
}

.card__content {
	box-shadow: 0 0.2em 1em rgba(0, 0, 0, 0.1), 0 1em 2em rgba(0, 0, 0, 0.1);
	background: rgb(255, 255, 255);
	color: rgb(10, 5, 7);
	border-radius: 1em;
	overflow: hidden;
	display: grid;
	grid-template-rows: auto;
	align-items: end;
	outline: var(--outline-width) solid blue;
}

.card__content > div {
	place-self: center;
	text-align: left;
	display: grid;
	gap: 1em;
	place-items: start;
	width: 100%;
	padding: 5vh;
}

.card__content > figure {
	overflow: hidden;
	box-shadow: inset 0px 0px 15px 5px rgba(0, 0, 0, 0.15);
	position: relative;
	height: 200px;
}

@media (min-width: 800px) {
	.card__content {
		grid-template-areas: "text img";
		grid-template-columns: 1fr 1fr;
	}
	.card__content > div {
		grid-area: text;
	}
	.card__content > figure {
		grid-area: img;
		height: 100%;
	}
}

.card__content > figure > img {
	width: 100%;
	height: 100%;
	object-fit: cover;
	position: absolute;
	inset: 0;
}

header h1 {
	font-size: 3.5em;
}

main h1 {
	font-size: 2.5em;
}

main h2 {
	font-size: 2.5em;
}

main p {
	line-height: 1.5;
}

main .btn {
	background: rgb(46 46 46);
	color: rgb(255 255 255);
	text-decoration: none;
	display: inline-block;
	padding: 0.5em 1em;
	border-radius: 0.25em;
	font-size: 0.8em;
	font-weight: 400;
}

aside {
	width: 100%;
	max-width: var(--container-width);
	margin: 0 auto;
	text-align: left;
	display: grid;
	gap: 2em;
	line-height: 1.5;
	padding-bottom: 5em;
}

@supports (animation-timeline: view()) {
	.card {
		--index0: calc(var(--index) - 1); /* 0-based index */
		--reverse-index: calc(var(--numcards) - var(--index0)); /* reverse index */
		--reverse-index0: calc(var(--reverse-index) - 1); /* 0-based reverse index */
	}

	@keyframes scale-down {
		to {
			transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
		}
	}

	@keyframes scale-up {
		from {
			transform: scale(1);
		}
		to {
			transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
		}
	}

	#cards {
		--numcards: 4;
		view-timeline-name: --cards-element-scrolls-in-body;
	}

	.card__content {
		will-change: transform;
		--start-range: calc(var(--index0) / var(--numcards) * 100%);
		--end-range: calc((var(--index)) / var(--numcards) * 100%);

		animation: linear scale-down forwards;
		animation-timeline: --cards-element-scrolls-in-body;
		animation-range: exit-crossing var(--start-range) exit-crossing var(--end-range);
	}

	@keyframes stackedAnimation {
		0% {
			transform: scale(calc(1.1 - calc(0.1 * var(--reverse-index))));
		}
		100% {
			transform: scale(1);
		}
	}

	html[data-sticky-position="bottom"] .card__content {
		animation: auto linear stackedAnimation both;
		animation-timeline: --cards-element-scrolls-in-body;
		animation-range: entry-crossing 0% contain 50%;
	}
}

/** Debug **/

html[data-debug="true"] main {
	--outline-width: 1px;
}

/** WARNING **/

.warning {
	position: fixed;
	bottom: 1rem;
	left: 1rem;
	right: 1rem;
	width: max-content;
	text-align: center;
	max-width: 90vw;
	margin: auto;
	z-index: 2;
	font-size: 0.8em;
	color: #333;
	background-color: hsl(38.82deg 79.55% 81.83%);
	border: 1px solid orange;
	padding: 1rem 2rem;
	border-radius: 3rem;
}

@supports (animation-timeline: view()) {
	.warning:not([data-bug]) {
		display: none;
	}
}
